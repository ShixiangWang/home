<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>purrr on Shixiang Wang | 王诗翔</title>
    <link>/tags/purrr/</link>
    <description>Recent content in purrr on Shixiang Wang | 王诗翔</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 02 Dec 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/purrr/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>unlist() 和 purrr::flatten() 的区别在哪里？</title>
      <link>/cn/post/2020-12-02-difference-between-unlist-and-flatten/</link>
      <pubDate>Wed, 02 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/2020-12-02-difference-between-unlist-and-flatten/</guid>
      <description>最近在工作的时候有一个需求是解除对象的列表结构，但运行后发现 unlist() 并非我想要的只解除一层嵌套。 我们用个非常简单的数据来看这个问题： x &amp;lt;- list(list(a = 1, b =</description>
    </item>
    
    <item>
      <title>使用purrr和broom处理多个模型</title>
      <link>/cn/post/purrr-and-broom/</link>
      <pubDate>Mon, 15 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/purrr-and-broom/</guid>
      <description>整理自《R for data science》 本文介绍3种方法用于处理大量模型。 使用多个简单模型更好地理解复杂数据集。 使用列表列在数据框中保存任意数据结构。</description>
    </item>
    
    <item>
      <title>用purrr实现迭代</title>
      <link>/cn/post/purrr-loop/</link>
      <pubDate>Thu, 04 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/purrr-loop/</guid>
      <description>函数有3个好处： 更容易看清代码意图 更容易对需求变化做出反应（改变） 更容易减少程序bug 除了函数，减少重复代码的另一种工具是迭代，它的作用在于</description>
    </item>
    
  </channel>
</rss>